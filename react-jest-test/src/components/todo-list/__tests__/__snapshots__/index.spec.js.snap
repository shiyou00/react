// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`todo-list renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoList
    deleteTodo={[MockFunction]}
    list={
      Array [
        "first",
        "second",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <span
            className="item-text "
          >
            first
          </span>
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
          >
            done
          </Button>
        </div>,
        <div>
          <span
            className="item-text "
          >
            second
          </span>
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
          >
            done
          </Button>
        </div>,
      ],
      "className": "todo-list",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="item-text "
            >
              first
            </span>,
            <Button
              block={false}
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[Function]}
            >
              done
            </Button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "first",
              "className": "item-text ",
            },
            "ref": null,
            "rendered": "first",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": "done",
              "ghost": false,
              "htmlType": "button",
              "loading": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "done",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="item-text "
            >
              second
            </span>,
            <Button
              block={false}
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[Function]}
            >
              done
            </Button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "second",
              "className": "item-text ",
            },
            "ref": null,
            "rendered": "second",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": "done",
              "ghost": false,
              "htmlType": "button",
              "loading": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "done",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <span
              className="item-text "
            >
              first
            </span>
            <Button
              block={false}
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[Function]}
            >
              done
            </Button>
          </div>,
          <div>
            <span
              className="item-text "
            >
              second
            </span>
            <Button
              block={false}
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[Function]}
            >
              done
            </Button>
          </div>,
        ],
        "className": "todo-list",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="item-text "
              >
                first
              </span>,
              <Button
                block={false}
                ghost={false}
                htmlType="button"
                loading={false}
                onClick={[Function]}
              >
                done
              </Button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "first",
                "className": "item-text ",
              },
              "ref": null,
              "rendered": "first",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "done",
                "ghost": false,
                "htmlType": "button",
                "loading": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "done",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="item-text "
              >
                second
              </span>,
              <Button
                block={false}
                ghost={false}
                htmlType="button"
                loading={false}
                onClick={[Function]}
              >
                done
              </Button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "second",
                "className": "item-text ",
              },
              "ref": null,
              "rendered": "second",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "done",
                "ghost": false,
                "htmlType": "button",
                "loading": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "done",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Array [],
  Symbol(enzyme.__childContext__): null,
}
`;
